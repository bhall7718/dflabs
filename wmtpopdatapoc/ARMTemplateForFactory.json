{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "wmtpopdatapoc"
		},
		"SQL_Server_DestDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_Server_DestDB'"
		},
		"SQL_Server_SourceDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQL_Server_SourceDB'"
		},
		"popdatablobconn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'popdatablobconn'"
		},
		"popdatapocdatalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'popdatapocdatalake'"
		},
		"wmtpopdatapocblob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'wmtpopdatapocblob'"
		},
		"DestinationDataset_p7h_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"DestinationDataset_p7h_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "data"
		},
		"SourceDataset_p7h_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"SourceDataset_p7h_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "data"
		},
		"popdatapocdatalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://wmtpopdatapoc.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_p7h')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_p7h",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "data/"
							},
							{
								"name": "Destination",
								"value": "data/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureBlobFSSink",
								"copyBehavior": "PreserveHierarchy"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_p7h",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_p7h",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_p7h')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_p7h')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental SQL Copy Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupOldWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"dataset": {
								"referenceName": "WatermarkDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupNewWaterMarkActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkvalue from data_source_table"
							},
							"dataset": {
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "IncrementalCopyActivity",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "[concat('[', 'dbo].[data_source_table]')]"
							},
							{
								"name": "Destination",
								"value": "[concat('[', 'dbo].[data_dest_table]')]"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from data_source_table where LastModifytime > '@{activity('LookupOldWaterMarkActivity').output.firstRow.WatermarkValue}' and LastModifytime <= '@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}'",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"PersonID": "PersonID",
									"Name": "Name",
									"LastModifytime": "LastModifytime"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoWriteWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IncrementalCopyActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[usp_write_watermark]')]",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupNewWaterMarkActivity').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@{activity('LookupOldWaterMarkActivity').output.firstRow.TableName}",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_Server_DestDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SendSuccessEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "StoredProceduretoWriteWatermarkActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.westus.logic.azure.com:443/workflows/93d01d0ec4e54a2bb0e04fc8c88c3256/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=k8T80fwjT3ZrXmH29z8UEG1cFTnc7NAOmcPzVFPZZx4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "Rows Copied: @{activity('IncrementalCopyActivity').output.rowsCopied}",
								"subject": "Success",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "SendFailStoredProcEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "StoredProceduretoWriteWatermarkActivity",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.westus.logic.azure.com:443/workflows/93d01d0ec4e54a2bb0e04fc8c88c3256/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=k8T80fwjT3ZrXmH29z8UEG1cFTnc7NAOmcPzVFPZZx4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('StoredProceduretoWriteWatermarkActivity').error.message}",
								"subject": "Failure",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "SendFailCopyEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "IncrementalCopyActivity",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.westus.logic.azure.com:443/workflows/93d01d0ec4e54a2bb0e04fc8c88c3256/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=k8T80fwjT3ZrXmH29z8UEG1cFTnc7NAOmcPzVFPZZx4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('IncrementalCopyActivity').error.message}",
								"subject": "Failure",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "SendFailLookupOldWaterMarkEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "LookupOldWaterMarkActivity",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.westus.logic.azure.com:443/workflows/93d01d0ec4e54a2bb0e04fc8c88c3256/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=k8T80fwjT3ZrXmH29z8UEG1cFTnc7NAOmcPzVFPZZx4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('LookupOldWaterMarkActivity').error.message}",
								"subject": "Failure",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "SendFailLookupNewWaterMarkEmail",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "LookupNewWaterMarkActivity",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-23.westus.logic.azure.com:443/workflows/93d01d0ec4e54a2bb0e04fc8c88c3256/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=k8T80fwjT3ZrXmH29z8UEG1cFTnc7NAOmcPzVFPZZx4",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"message": "@{activity('LookupNewWaterMarkActivity').error.message}",
								"subject": "Failure",
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					}
				],
				"parameters": {
					"receiver": {
						"type": "String",
						"defaultValue": "bihal@microsoft.com"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WatermarkDataset')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_DestDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stores Transforms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stores Data Transforms",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Walmart Stores Transform",
								"type": "DataFlowReference",
								"datasetParameters": {
									"Stores": {},
									"AllStoresAllDataCSV": {},
									"NeighborhoodMarketCSV": {},
									"SupercenterCSV": {},
									"WalmartCSV": {},
									"AllStoresCSV": {}
								}
							},
							"staging": {},
							"compute": {
								"computeType": "General",
								"dataTransformationUnits": 4,
								"coreCount": 8,
								"numberOfNodes": 0
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Walmart Stores Transform')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Walmart Stores Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Evaluates what rows were recently modified or added since the last run, then hands those to a stored procedure to be merged into the master destination table.",
				"activities": [
					{
						"name": "LookupLastChangeTrackingVersionActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT \n      [SYS_CHANGE_VERSION] as LastChangeTrackingVersion\n  FROM [dbo].[table_store_ChangeTracking_version]\n  WHERE TableName = 'US_Stores'"
							},
							"dataset": {
								"referenceName": "ChangeTrackingDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "LookupCurrentChangeTrackingVersionActivity",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT CHANGE_TRACKING_CURRENT_VERSION() as CurrentChangeTrackingVersion"
							},
							"dataset": {
								"referenceName": "Source_US_Stores",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "MergeAndUpdateTrackingProc",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastChangeTrackingVersionActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupCurrentChangeTrackingVersionActivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "select * from US_Stores RIGHT OUTER JOIN CHANGETABLE(CHANGES US_Stores, @{activity('LookupLastChangeTrackingVersionActivity').output.firstRow.LastChangeTrackingVersion}) as CT on US_Stores.Store_Nbr = CT.Store_Nbr where CT.SYS_CHANGE_VERSION <= @{activity('LookupCurrentChangeTrackingVersionActivity').output.firstRow.CurrentChangeTrackingVersion}",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"sqlWriterStoredProcedureName": "[concat('[', 'dbo].[Merge_US_Stores]')]",
								"sqlWriterTableType": "US_StoresType",
								"storedProcedureParameters": {
									"currentTrackingVersion": {
										"type": "Int64",
										"value": {
											"value": "@{activity('LookupCurrentChangeTrackingVersionActivity').output.firstRow.CurrentChangeTrackingVersion}",
											"type": "Expression"
										}
									},
									"Return_Message": {
										"type": "String",
										"value": null
									}
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Store_Nbr": "Store_Nbr",
									"Global_Location_Number": "Global_Location_Number",
									"DUNS": "DUNS",
									"Store_Name": "Store_Name",
									"Store_Type": "Store_Type",
									"Building_Address": "Building_Address",
									"Building_City": "Building_City",
									"Building_State_Prov": "Building_State_Prov",
									"Building_Postal_Code": "Building_Postal_Code",
									"Small_Package___Mailing_Address": "Small_Package___Mailing_Address",
									"Mailing_City": "Mailing_City",
									"Mailing_State_Prov": "Mailing_State_Prov",
									"Mailing_Postal_Code": "Mailing_Postal_Code",
									"Phone_Number": "Phone_Number",
									"Size__Sq_Ft_": "Size__Sq_Ft_",
									"Open_Date": "Open_Date",
									"Regional_DC": "Regional_DC",
									"Dry_Grocery_DC": "Dry_Grocery_DC",
									"Perishable_DC": "Perishable_DC",
									"Specialty_DC": "Specialty_DC"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_US_Stores",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dest_US_Stores",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ChangeTrackingDataset')]",
				"[concat(variables('factoryId'), '/datasets/Source_US_Stores')]",
				"[concat(variables('factoryId'), '/datasets/Dest_US_Stores')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ChangeTrackingDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Server_DestDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "TableName",
						"type": "String"
					},
					{
						"name": "SYS_CHANGE_VERSION",
						"type": "Int64"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[table_store_ChangeTracking_version]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_DestDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dest_US_Stores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Server_DestDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Store_Nbr",
						"type": "Int32"
					},
					{
						"name": "Global_Location_Number",
						"type": "String"
					},
					{
						"name": "DUNS",
						"type": "String"
					},
					{
						"name": "Store_Name",
						"type": "String"
					},
					{
						"name": "Store_Type",
						"type": "String"
					},
					{
						"name": "Building_Address",
						"type": "String"
					},
					{
						"name": "Building_City",
						"type": "String"
					},
					{
						"name": "Building_State_Prov",
						"type": "String"
					},
					{
						"name": "Building_Postal_Code",
						"type": "String"
					},
					{
						"name": "Small_Package___Mailing_Address",
						"type": "String"
					},
					{
						"name": "Mailing_City",
						"type": "String"
					},
					{
						"name": "Mailing_State_Prov",
						"type": "String"
					},
					{
						"name": "Mailing_Postal_Code",
						"type": "String"
					},
					{
						"name": "Phone_Number",
						"type": "String"
					},
					{
						"name": "Size__Sq_Ft_",
						"type": "String"
					},
					{
						"name": "Open_Date",
						"type": "String"
					},
					{
						"name": "Regional_DC",
						"type": "String"
					},
					{
						"name": "Dry_Grocery_DC",
						"type": "String"
					},
					{
						"name": "Perishable_DC",
						"type": "String"
					},
					{
						"name": "Specialty_DC",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "changedStoreRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_DestDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Server_DestDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PersonID",
						"type": "Int32"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "LastModifytime",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[data_dest_table]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_DestDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_p7h')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "popdatapocdatalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlobFSFile",
				"typeProperties": {
					"fileName": "[parameters('DestinationDataset_p7h_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('DestinationDataset_p7h_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/popdatapocdatalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Server_SourceDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "PersonID",
						"type": "Int32"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "LastModifytime",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[data_source_table]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_SourceDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_p7h')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "popdatablobconn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": "[parameters('SourceDataset_p7h_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('SourceDataset_p7h_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/popdatablobconn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_US_Stores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Server_SourceDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Store_Nbr",
						"type": "Int32"
					},
					{
						"name": "Global_Location_Number",
						"type": "String"
					},
					{
						"name": "DUNS",
						"type": "String"
					},
					{
						"name": "Store_Name",
						"type": "String"
					},
					{
						"name": "Store_Type",
						"type": "String"
					},
					{
						"name": "Building_Address",
						"type": "String"
					},
					{
						"name": "Building_City",
						"type": "String"
					},
					{
						"name": "Building_State_Prov",
						"type": "String"
					},
					{
						"name": "Building_Postal_Code",
						"type": "String"
					},
					{
						"name": "Small_Package___Mailing_Address",
						"type": "String"
					},
					{
						"name": "Mailing_City",
						"type": "String"
					},
					{
						"name": "Mailing_State_Prov",
						"type": "String"
					},
					{
						"name": "Mailing_Postal_Code",
						"type": "String"
					},
					{
						"name": "Phone_Number",
						"type": "String"
					},
					{
						"name": "Size__Sq_Ft_",
						"type": "String"
					},
					{
						"name": "Open_Date",
						"type": "String"
					},
					{
						"name": "Regional_DC",
						"type": "String"
					},
					{
						"name": "Dry_Grocery_DC",
						"type": "String"
					},
					{
						"name": "Perishable_DC",
						"type": "String"
					},
					{
						"name": "Specialty_DC",
						"type": "String"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[US_Stores]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_SourceDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_US_Stores2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Server_SourceDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Store_Nbr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Global_Location_Number",
						"type": "varchar"
					},
					{
						"name": "DUNS",
						"type": "varchar"
					},
					{
						"name": "Store_Name",
						"type": "varchar"
					},
					{
						"name": "Store_Type",
						"type": "varchar"
					},
					{
						"name": "Building_Address",
						"type": "varchar"
					},
					{
						"name": "Building_City",
						"type": "varchar"
					},
					{
						"name": "Building_State_Prov",
						"type": "varchar"
					},
					{
						"name": "Building_Postal_Code",
						"type": "varchar"
					},
					{
						"name": "Small_Package___Mailing_Address",
						"type": "varchar"
					},
					{
						"name": "Mailing_City",
						"type": "varchar"
					},
					{
						"name": "Mailing_State_Prov",
						"type": "varchar"
					},
					{
						"name": "Mailing_Postal_Code",
						"type": "varchar"
					},
					{
						"name": "Phone_Number",
						"type": "varchar"
					},
					{
						"name": "Size__Sq_Ft_",
						"type": "varchar"
					},
					{
						"name": "Open_Date",
						"type": "varchar"
					},
					{
						"name": "Regional_DC",
						"type": "varchar"
					},
					{
						"name": "Dry_Grocery_DC",
						"type": "varchar"
					},
					{
						"name": "Perishable_DC",
						"type": "varchar"
					},
					{
						"name": "Specialty_DC",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[US_Stores]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_SourceDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WatermarkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_Server_DestDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "TableName",
						"type": "String"
					},
					{
						"name": "WatermarkValue",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[watermarktable]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_Server_DestDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tstores')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "wmtpopdatapocblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "bills-data"
					},
					"columnDelimiter": ",",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/wmtpopdatapocblob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Server_DestDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_Server_DestDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Server_SourceDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQL_Server_SourceDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/popdatablobconn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('popdatablobconn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/popdatapocdatalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('popdatapocdatalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('popdatapocdatalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wmtpopdatapocblob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('wmtpopdatapocblob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Walmart Stores Transform')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_US_Stores2",
								"type": "DatasetReference"
							},
							"name": "Stores",
							"script": "source(output(\n\t\tStore_Nbr as integer,\n\t\tGlobal_Location_Number as string,\n\t\tDUNS as string,\n\t\tStore_Name as string,\n\t\tStore_Type as string,\n\t\tBuilding_Address as string,\n\t\tBuilding_City as string,\n\t\tBuilding_State_Prov as string,\n\t\tBuilding_Postal_Code as string,\n\t\tSmall_Package___Mailing_Address as string,\n\t\tMailing_City as string,\n\t\tMailing_State_Prov as string,\n\t\tMailing_Postal_Code as string,\n\t\tPhone_Number as string,\n\t\tSize__Sq_Ft_ as string,\n\t\tOpen_Date as string,\n\t\tRegional_DC as string,\n\t\tDry_Grocery_DC as string,\n\t\tPerishable_DC as string,\n\t\tSpecialty_DC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table') ~> Stores",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tstores",
								"type": "DatasetReference"
							},
							"name": "AllStoresAllDataCSV",
							"script": "SortByStoreNbr sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tpartitionFileNames:['tstores.csv']) ~> AllStoresAllDataCSV"
						},
						{
							"dataset": {
								"referenceName": "tstores",
								"type": "DatasetReference"
							},
							"name": "NeighborhoodMarketCSV",
							"script": "NeighborhoodMarkets sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tpartitionFileNames:['simple-nh.csv']) ~> NeighborhoodMarketCSV"
						},
						{
							"dataset": {
								"referenceName": "tstores",
								"type": "DatasetReference"
							},
							"name": "SupercenterCSV",
							"script": "Supercenters sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tpartitionFileNames:['simple-supercenters.csv']) ~> SupercenterCSV"
						},
						{
							"dataset": {
								"referenceName": "tstores",
								"type": "DatasetReference"
							},
							"name": "WalmartCSV",
							"script": "Walmarts sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tpartitionFileNames:['simple-wm.csv']) ~> WalmartCSV"
						},
						{
							"dataset": {
								"referenceName": "tstores",
								"type": "DatasetReference"
							},
							"name": "AllStoresCSV",
							"script": "SelectSpecific sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionBy('hash', 1),\n\tpartitionFileNames:['simple-allstores.csv']) ~> AllStoresCSV"
						}
					],
					"transformations": [
						{
							"name": "FullStoreAddress",
							"script": "Stores derive(FullStoreAddress = concat(Building_Address, ' ', Building_City, ' ', Building_State_Prov, ' ', Building_Postal_Code)) ~> FullStoreAddress"
						},
						{
							"name": "SortByStoreNbr",
							"script": "FullStoreAddress sort(desc(Store_Nbr, true)) ~> SortByStoreNbr"
						},
						{
							"name": "SelectSpecific",
							"script": "FullStoreAddress select(mapColumn(\n\t\tStore_Nbr,\n\t\tStore_Name,\n\t\tStore_Type,\n\t\tPhone_Number,\n\t\tSize__Sq_Ft_,\n\t\tFullStoreAddress\n\t))~> SelectSpecific"
						},
						{
							"name": "NeighborhoodMarkets",
							"script": "SelectSpecific filter(trim(Store_Type) == 'Neighborhood Market') ~> NeighborhoodMarkets"
						},
						{
							"name": "Supercenters",
							"script": "SelectSpecific filter(trim(Store_Type) == 'Supercenter') ~> Supercenters"
						},
						{
							"name": "Walmarts",
							"script": "SelectSpecific filter(trim(Store_Type) == 'Wal-Mart') ~> Walmarts"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_US_Stores2')]",
				"[concat(variables('factoryId'), '/datasets/tstores')]"
			]
		}
	]
}